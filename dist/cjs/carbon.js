/*! @ryanmorr/carbon v0.2.2 | https://github.com/ryanmorr/carbon */
"use strict";const e=1,n=3;function t(...e){return Object.assign({},...e)}function r(e){return e.attributes&&e.attributes.key||null}function o(e){return null!=e&&"boolean"!=typeof e}function l(e,n){return e.nodeName===n.nodeName&&r(e)===r(n)}function i(e){if("string"==typeof e)return e;let n="";if(Array.isArray(e)&&e.length>0)for(let t,r=0,o=e.length;r<o;r++)""!==(t=i(e[r]))&&(n+=(n&&" ")+t);else for(const t in e)e[t]&&(n+=(n&&" ")+t);return n}function s(e,n,t){const o={};for(let l=n;l<=t;++l){const n=e[l],t=n&&r(n);null!=t&&(o[t]=l)}return o}function u(n,t,r,o=null){return{nodeType:e,node:o,nodeName:n,attributes:t,children:r}}function c(e,t=null){return{nodeType:n,node:t,text:e}}function f(e){const n=typeof e;return"boolean"===n?null:"string"===n||"number"===n?c(e):Array.isArray(e)?function(e){for(let n=0;n<e.length;){const t=e[n];Array.isArray(t)?t.length>0?(t.unshift(n,1),e.splice.apply(e,t),t.splice(0,2)):e.splice(n,1):n++}return e}(e).reduce(((e,n)=>(o(n)&&e.push(f(n)),e)),[]):e}function a(e,n){if(3===e.nodeType)return c(e.data,e);if(1===e.nodeType){if(n){const t=n.map((e=>e(null)));t&&t.forEach((n=>n&&n(e)))}return u(e.nodeName.toLowerCase(),Array.from(e.attributes).reduce(((n,t)=>{const r=t.name,o=t.value;return"style"!==r&&(n[r]=o),"key"===r&&e.removeAttribute("key"),n}),{}),Array.from(e.childNodes).map((e=>a(e,n))),e)}}const d=new Map;function y(e,t,r){let o;if(e.nodeType===n)o=document.createTextNode(e.text);else{let n;r&&(n=r.map((n=>n(e))));const l=e.nodeName;o=(t=t||"svg"===l)?document.createElementNS("http://www.w3.org/2000/svg",l):document.createElement(l);const i=e.attributes;Object.keys(i).forEach((e=>p(o,e,null,i[e],t))),e.children.forEach((e=>o.appendChild(y(e,t,r)))),n&&n.forEach((e=>e&&e(o)))}return e.node=o,o}function p(e,n,r,o,l){if("key"!==n&&"children"!==n)if(l?"className"===n&&(n="class"):"class"===n&&(n="className"),"class"!==n&&"className"!==n||(o=i(o)),"style"===n)if("string"==typeof o)e.style.cssText=o;else for(const n in t(o,r)){const t=null==o||null==o[n]?"":o[n];n.includes("-")?e.style.setProperty(n,t):e.style[n]=t}else!n.startsWith("on")||"function"!=typeof r&&"function"!=typeof o?!l&&"list"!==n&&"form"!==n&&n in e?e[n]=null==o?"":o:null==o||!1===o?e.removeAttribute(n):"function"!=typeof o&&e.setAttribute(n,o):(n=n.slice(2),o&&e.addEventListener(n,o),r&&e.removeEventListener(n,r))}function m(e,n,t,o,i){let u,c=0,f=n.length-1,a=n[0],d=n[f],p=0,m=t.length-1,g=t[0],b=t[m];for(;c<=f&&p<=m;)if(a)if(d)if(l(a,g))h(e,a,g,o,i),a=n[++c],g=t[++p];else if(l(d,b))h(e,d,b,o,i),d=n[--f],b=t[--m];else if(l(a,b))h(e,a,b,o,i),e.insertBefore(a.node,d.node.nextSibling),a=n[++c],b=t[--m];else if(l(d,g))h(e,d,g,o,i),e.insertBefore(d.node,a.node),d=n[--f],g=t[++p];else{u||(u=s(n,c,f));let l=r(g),d=l?u[l]:null;if(null==d)e.insertBefore(y(g,o,i),a.node),g=t[++p];else{let r=n[d];h(e,r,g,o,i),n[d]=void 0,e.insertBefore(r.node,a.node),g=t[++p]}}else d=n[--f];else a=n[++c];if(c>f){let n=t[m+1]?t[m+1].node:null;for(let r=p;r<=m;r++)e.insertBefore(y(t[r],o,i),n)}else if(p>m)for(let t=c;t<=f;t++){let r=n[t];r&&r.node&&e.removeChild(r.node)}return t}function h(e,r,o,l,i){if(r===o)return null==r?null:r.node;if(null==r)return e.appendChild(y(o,l,i));let s=r.node;if(null==o)return e.removeChild(s)&&null;if(r.nodeType===n&&o.nodeType===n)r.text!==o.text&&(s.data=o.text);else if(c=r,(u=o).nodeType!==c.nodeType||u.nodeType===n&&u.text!==c.text||u.nodeName!==c.nodeName){const n=y(o,l,i);e.replaceChild(n,s),s=n}else{l=l||"svg"===o.nodeName;const e=document.activeElement,n=r.attributes,u=o.attributes;for(const e in t(u,n))("value"===e||"selected"===e||"checked"===e?s[e]:n[e])!==u[e]&&p(s,e,n[e],u[e],l);m(s,r.children,o.children,l,i),e.focus()}var u,c;return o.node=s,s}exports.h=function(e,n,...t){return n&&!n.nodeType&&"function"!=typeof n.concat||(t=[].concat(n||[],...t),n={}),u(e,n||{},f(t))},exports.render=function(e,n,t){n=f(n);let r=d.get(e);r||(r=e.childNodes.length>0?Array.from(e.childNodes).map((e=>a(e,t))):null);const l=Array.isArray(r),i=Array.isArray(n);if(d.set(e,n),l||i){r=(l?r:[r]).filter(o);const s=m(e,r,n=(i?n:[n]).filter(o),null,t);return 0===s.length?null:1===s.length?s[0].node:s.map((e=>e.node))}return h(e,r,n,null,t)};
