/*! @ryanmorr/carbon v0.2.1 | https://github.com/ryanmorr/carbon */function _typeof2(a){return _typeof2="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof2(a)}function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"===_typeof2(Symbol.iterator)?function(a){return _typeof2(a)}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":_typeof2(a)},_typeof(a)}function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_nonIterableSpread()}function _arrayWithoutHoles(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}}function _iterableToArray(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}var ELEMENT_NODE=1,TEXT_NODE=3,VDOM=Symbol("vdom");function merge(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];return Object.assign.apply(Object,[{}].concat(b))}function getKey(a){return a.attributes&&a.attributes.key||null}function isValidNodeType(a){return null!=a&&"boolean"!=typeof a}function isSameNode(c,a){return c.nodeName===a.nodeName&&getKey(c)===getKey(a)}function isSameNodeType(c,a){return!(c.nodeType!==a.nodeType)&&(c.nodeType!==TEXT_NODE||c.text===a.text)&&!(c.nodeName!==a.nodeName)}function flatten(a){for(var b,c=0;c<a.length;)b=a[c],Array.isArray(b)?0<b.length?(b.unshift(c,1),a.splice.apply(a,b),b.splice(0,2)):a.splice(c,1):c++;return a}function createClass(a){if("string"==typeof a)return a;var b="";if(Array.isArray(a)&&0<a.length)for(var c,d=0,e=a.length;d<e;d++)""!==(c=createClass(a[d]))&&(b+=(b&&" ")+c);else for(var f in a)a[f]&&(b+=(b&&" ")+f);return b}function createKeyToIndexMap(a,b,c){for(var d={},e=b;e<=c;++e){var f=a[e],g=f&&getKey(f);null!=g&&(d[g]=e)}return d}function createVNode(a,b,c){var d=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{nodeType:ELEMENT_NODE,node:d,nodeName:a,attributes:b,children:c}}function createTextVNode(a){var b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:null;return{nodeType:TEXT_NODE,node:b,text:a}}function getVNode(a){var b=_typeof(a);return"boolean"===b?null:"string"===b||"number"===b?createTextVNode(a):Array.isArray(a)?flatten(a).reduce(function(a,b){return isValidNodeType(b)&&a.push(getVNode(b)),a},[]):a}function recycle(a,b){if(3===a.nodeType)return createTextVNode(a.data,a);if(1===a.nodeType){if(b){var c=b.map(function(a){return a(null)});c&&c.forEach(function(b){return b&&b(a)})}return createVNode(a.nodeName.toLowerCase(),Array.from(a.attributes).reduce(function(b,c){var d=c.name,e=c.value;return"style"!==d&&(b[d]=e),"key"===d&&a.removeAttribute("key"),b},{}),Array.from(a.childNodes).map(function(a){return recycle(a,b)}),a)}}function h(a,b){for(var c=arguments.length,d=Array(2<c?c-2:0),e=2;e<c;e++)d[e-2]=arguments[e];if(!b||b.nodeType||"function"==typeof b.concat){var f;d=(f=[]).concat.apply(f,[b||[]].concat(_toConsumableArray(d))),b={}}return createVNode(a,b||{},getVNode(d))}function createElement(a,b,c){var d;if(a.nodeType===TEXT_NODE)d=document.createTextNode(a.text);else{var e;c&&(e=c.map(function(b){return b(a)}));var f=a.nodeName;b=b||"svg"===f,d=b?document.createElementNS("http://www.w3.org/2000/svg",f):document.createElement(f);var g=a.attributes;Object.keys(g).forEach(function(a){return patchAttribute(d,a,null,g[a],b)}),a.children.forEach(function(a){return d.appendChild(createElement(a,b,c))}),e&&e.forEach(function(a){return a&&a(d)})}return a.node=d,d}function patchAttribute(a,b,c,d,e){if("key"!==b&&"children"!==b)if(e?"className"===b&&(b="class"):"class"===b&&(b="className"),("class"===b||"className"===b)&&(d=createClass(d)),"style"!==b)b.startsWith("on")&&("function"==typeof c||"function"==typeof d)?(b=b.slice(2),d&&a.addEventListener(b,d),c&&a.removeEventListener(b,c)):!e&&"list"!==b&&"form"!==b&&b in a?a[b]=null==d?"":d:null==d||!1===d?a.removeAttribute(b):"function"!=typeof d&&a.setAttribute(b,d);else if("string"==typeof d)a.style.cssText=d;else for(var f in merge(d,c)){var g=null==d||null==d[f]?"":d[f];f.includes("-")?a.style.setProperty(f,g):a.style[f]=g}}function patchChildren(a,b,c,d,e){for(var f,g=0,h=b.length-1,j=b[0],k=b[h],l=0,m=c.length-1,n=c[0],o=c[m];g<=h&&l<=m;)if(!j)j=b[++g];else if(!k)k=b[--h];else if(isSameNode(j,n))patchElement(a,j,n,d,e),j=b[++g],n=c[++l];else if(isSameNode(k,o))patchElement(a,k,o,d,e),k=b[--h],o=c[--m];else if(isSameNode(j,o))patchElement(a,j,o,d,e),a.insertBefore(j.node,k.node.nextSibling),j=b[++g],o=c[--m];else if(isSameNode(k,n))patchElement(a,k,n,d,e),a.insertBefore(k.node,j.node),k=b[--h],n=c[++l];else{f||(f=createKeyToIndexMap(b,g,h));var p=getKey(n),q=p?f[p]:null;if(null==q)a.insertBefore(createElement(n,d,e),j.node),n=c[++l];else{var r=b[q];patchElement(a,r,n,d,e),b[q]=void 0,a.insertBefore(r.node,j.node),n=c[++l]}}if(g>h)for(var s=c[m+1]?c[m+1].node:null,t=l;t<=m;t++)a.insertBefore(createElement(c[t],d,e),s);else if(l>m)for(var u,v=g;v<=h;v++)u=b[v],u&&u.node&&a.removeChild(u.node);return c}function patchElement(a,b,c,d,e){if(b===c)return null==b?null:b.node;if(null==b)return a.appendChild(createElement(c,d,e));var f=b.node;if(null==c)return a.removeChild(f)&&null;if(b.nodeType===TEXT_NODE&&c.nodeType===TEXT_NODE)b.text!==c.text&&(f.data=c.text);else if(!isSameNodeType(c,b)){var g=createElement(c,d,e);a.replaceChild(g,f),f=g}else{d=d||"svg"===c.nodeName;var h=document.activeElement,i=b.attributes,j=c.attributes;for(var k in merge(j,i))("value"==k||"selected"===k||"checked"===k?f[k]:i[k])!==j[k]&&patchAttribute(f,k,i[k],j[k],d);patchChildren(f,b.children,c.children,d,e),h.focus()}return c.node=f,f}function render(a,b,c){b=getVNode(b);var d=a[VDOM]||(0<a.childNodes.length?Array.from(a.childNodes).map(function(a){return recycle(a,c)}):null),e=Array.isArray(d),f=Array.isArray(b);if(a[VDOM]=b,e||f){d=(e?d:[d]).filter(isValidNodeType),b=(f?b:[b]).filter(isValidNodeType);var g=patchChildren(a,d,b,null,c);return 0===g.length?null:1===g.length?g[0].node:g.map(function(a){return a.node})}return patchElement(a,d,b,null,c)}export{h,render};
